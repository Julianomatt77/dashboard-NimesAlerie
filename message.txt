datasShop!: Data[];

  chartDataConfiguration!: ChartConfiguration;

  constructor(
    private datasService: DatasService,
    private route: ActivatedRoute
  ) {
  }

  ngOnInit(): void {

    // @ViewChild(BaseChartDirective) chart?: BaseChartDirective;
    this.datasShop = this.datasService.datasShop;

    const options = {
      responsive: true,
      plugins: {
        legend: {
          position: 'top',
          display: true,
          labels: {
            color: '#eefbfb',
          },
        },
        title: {
          display: false,
          text: 'Valeur du panier moyen',
        },
      },
      scales: {
        x: {
          grid: {
            display: false,
            // color: '#eefbfb',
          },
          ticks: {
            color: '#eefbfb',
          },
        },
        y: {
          position: 'left',
          grid: {
            color: '#eefbfb',
          },
          ticks: {
            color: '#eefbfb',
          },
        },
      },
      elements: {
        line: {
          tension: 0.5,
        },
      },
    };

    //LABELS
    const labels = [];
    for (let i = 0; i < 12; i++) {
      labels.push(this.datasService.datasShop[i].dataDate);
    }

    const datasets = {
      label: 'Nombre de commandes',
      data: [],
      backgroundColor: '#ffb976',
      borderColor: '#ffb976',
      pointBackgroundColor: '#eefbfb',
      pointBorderColor: '#ffb976',
      pointHoverBackgroundColor: '#ffb976',
      pointHoverBorderColor: '#ffb976',
      fill: 'origin',
    };

    //Ajout des datas selon le type
    for (let i = 0; i < this.datasShop.length; i++) {
      if (this.datasShop[i].type === 'commande') {
        datasets.data.push(this.datasShop[i].dataValue);
      }
    }

    const chartData = {
      datasets: [datasets],
      labels: labels
    };

    this.chartDataConfiguration = {
      data: chartData,
      type: 'line',
      options
    };

  }

  /**
   * Lifecycle Method
   */
  ngOnChanges() {
    this.chartDataConfiguration.data.datasets.forEach((dataset: ChartDataset, index) => {
      dataset.backgroundColor = '#ffb976';
        dataset.borderColor = '#ffb976';
        dataset.backgroundColor = '#ffb976';
        dataset.borderColor = '#ffb976';
        dataset.pointBackgroundColor = '#eefbfb';
        dataset.pointBorderColor = '#ffb976';
        dataset.pointHoverBackgroundColor = '#ffb976';
        dataset.pointHoverBorderColor = '#ffb976';
    });
  }

  // $blueDark: #18558f;
  // $blueLight: #eefbfb;
  // $orangeCustom: #ffb976;

  randomize(): void {
    this.chartDataConfiguration.data.datasets[0].data = [];
    for (let i = 0; i < this.datasShop.length; i++) {
      if (this.datasShop[i].type === 'commande') {
        this.chartDataConfiguration.data.datasets[0].data.push(this.datasService.generateNumber(i));
      }
    }
    console.log(this.chartDataConfiguration.data.datasets[0].data);
  }